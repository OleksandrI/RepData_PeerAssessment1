download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","activity_data.zip")
file <- unzip("activity_data.zip", overwrite = TRUE)
activity <- read.csv(file, header = TRUE, sep = ",")
activity <- transform(activity, date = as.Date(date))
hist(activity$steps, main = "Histogram of steps per day", xlab = "Steps", ylab = "Count of days", col = "blue")
hist(activity$steps, main = "Histogram of steps per day", xlab = "Steps", ylab = "Count of days", col = "blue")
zip", overwrite = TRUE)
activity <- read.csv(fil
)
dsf
dsfsdfssdsf
sdamf;;
)
)
)
)
}
file <- unzip("activity.zip", overwrite = TRUE)
activity <- read.csv(file, header = TRUE, sep = ",")
activity <- transform(activity, date = as.Date(date))
step_means <- tapply(X = activity$steps, INDEX = activity$interval, FUN = mean, na.rm = TRUE)
plot(x = row.names(step_means), y = step_means, type = 'l')
plot(x = row.names(step_means), y = step_means, type = 'l')
file <- unzip("activity.zip", overwrite = TRUE)
activity <- read.csv(file, header = TRUE, sep = ",")
activity <- transform(activity, date = as.Date(date))
step_means <- tapply(X = activity$steps, INDEX = activity$interval, FUN = mean, na.rm = TRUE)
plot(x = row.names(step_means), y = step_means, type = 'l')
max(step_means)
step_mean[step_mean==max(step_means)]
step_mean[step_means==max(step_means)]
step_means[step_means==max(step_means)]
row.names(step_means[step_means==max(step_means)])
View(step_means)
plot(x = row.names(step_means), y = step_means, type = 'l')
qplot(x = row.names(step_means), y = step_means, type = 'l')
library(ggplot)
library(ggplot2)
qplot(x = row.names(step_means), y = step_means, type = 'l')
plot(x = row.names(step_means), y = step_means, type = 'l')
plot(x = row.names(step_means), y = step_means, type = 'l', col = "blue")
which.max(step_means)
k <- which.max(step_means)
names(k)
activityNew <- activity
is.na(activityNew$steps) <- step_means[which()]
?which
is.na(activityNew$steps) <- step_means[row.names(step_means)==activityNew$interval]
View(activityNew)
?is.na
step_means[row.names(step_means)==activityNew$interval]
is.na(activityNew$steps)
k <- NA
is.na(k) <- 5
is.na(k) <- 1
is.na(k) <- 1
is.na(k) <- 7
(xx <- c(0:4))
is.na(xx) <- c(2, 4)
is.na(xx) <- 1
activityNew <- activity
activityNew$steps <- step_means[row.names(step_means)==activityNew$interval]
View(activityNew)
mean(tapply(X = activity$steps, INDEX = activity$date, FUN = sum, na.rm = TRUE))
mean(tapply(X = activityNew$steps, INDEX = activityNew$date, FUN = sum, na.rm = TRUE))
x1 <- tapply(X = activity$steps, INDEX = activity$date, FUN = sum, na.rm = TRUE)
View(x1)
unique(activity$date)
mean(x)
mean(x1)
x2 <- tapply(X = activityNew$steps, INDEX = activityNew$date, FUN = sum, na.rm = TRUE)
View(x2)
activityNew <- activity
activityNew$steps[is.na(activityNew$steps)] <- step_means[row.names(step_means)==activityNew$interval]
View(activityNew)
k <- step_means[row.names(step_means)==activityNew$interval]
NAs <- is.na(activityNew)
NAs <- is.na(activityNew$step)
activityNew$steps[NAs] <- k[NAs]
k[NAs]
k[NAs,1]
k[NAs,]
k[NAs]
k[NAs]
activityNew <- activity
NAs <- which(is.na(activityNew$steps))
k[NAs]
for (i in unique(activityNew$interval)) {}
for (i in unique(activityNew$interval)) {
z <- step_means[row.names(step_means) == i]
activityNew$steps[as.logical(is.na(activityNew$steps) * (activityNew$interval == i))] <- z
}
View(activityNew)
activityNew <- activity
for (i in unique(activityNew$interval)) {
z <- step_means[row.names(step_means) == i]
activityNew$steps[as.logical(is.na(activityNew$steps) * (activityNew$interval == i))] <- z
}
View(activityNew)
activityNew$steps != activity$steps
t <- (activityNew$steps == activity$steps)
sum(is.na(t))
sum(na.omit(t)==TRUE)
sum(na.omit(t)==FALSE)
2304+ 15264
weekdays(activityNew$date)
l <- weekdays(activityNew$date)
l <-factor(weekdays(activityNew$date))
l <-factor(weekdays(1)
)
l <-factor(weekdays(activityNew$date, abbreviate = F))
l <-factor(weekdays(activityNew$date, abbreviate = T))
l <-factor(weekdays(activityNew$date))
l <-factor(ifelse(weekdays(activityNew$date)) %in% c("Saturday", "Sunday"), "weekday", "weekend")
l <-factor(ifelse(weekdays(activityNew$date)) %in% ("Saturday", "Sunday"), "weekday", "weekend")
l <-factor(weekdays(activityNew$date))
summary(l)
l <-factor(ifelse(weekdays(activityNew$date)) %in% ("Saturday", "Sunday"), "weekend", "weekday")
l <-factor(ifelse(weekdays(activityNew$date) %in% c("Saturday", "Sunday"), "weekend", "weekday"))
summary(l)
activityNew <- transform(activityNew, day = factor(ifelse(weekdays(activityNew$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")))
library(ggplot2)
View(activityNew)
activityNew <- transform(activityNew, week = factor(weekdays(activityNew$date)))
View(activityNew)
g <- ggplot(activityNew, aes(x = interval, y = steps))
g + geom_line()
step_means_new <- tapply(X = activityNew$steps, INDEX = c(activity$interval, activityNew$day), FUN = mean, na.rm = TRUE)
step_means_new <- tapply(X = activityNew$steps, INDEX = c(activityNew$interval, activityNew$day), FUN = mean, na.rm = TRUE)
?tapply
step_means_new <- by(X = activityNew$steps, INDEX = list(activityNew$interval, activityNew$day), FUN = mean, na.rm = TRUE)
step_means_new <- by(activityNew$steps, INDEX = list(activityNew$interval, activityNew$day), FUN = mean, na.rm = TRUE)
step_means_new <- by(activityNew$steps, list(activityNew$interval, activityNew$day), FUN = mean, na.rm = TRUE)
step_means_new
View(step_means_new)
step_means_new <- by(activityNew$steps, list(activityNew$interval, activityNew$day), FUN = mean, na.rm = TRUE, simplify = TRUE)
View(step_means_new)
g <- ggplot(activityNew, aes(x = interval, y = mean(steps))
)
g + geom_line()
?tapply
step_means_new <- aggregate.data.frame(activityNew$steps, by = )
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red", "blue", 1, 2, NA, "big", 1, 2, "red", 1, NA, 12)
by2 <- c("wet", "dry", 99, 95, NA, "damp", 95, 99, "red", 99, NA, NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
step_means_new <- aggregate.data.frame(activityNew$steps, by = activityNew[,3:4], FUN = mean)
View(step_means_new)
g <- ggplot(step_means_new, aes(x = interval, y = x)
)
g + geom_line()
g + geom_line() + facet_grid(facets = day ~ .)
step_means_new <- aggregate.data.frame(activityNew$steps, by = activityNew[,3:4], FUN = mean)
View(step_means_new)
g + geom_line() + facet_grid(facets = day ~ .) + labs(y = "steps")
stepsPerDay <- aggregate.data.frame(x = activity$steps, by = activity$date, FUN = sum, na.rm = TRUE)
stepsPerDay <- aggregate.data.frame(x = activity$steps, by = activity[,2], FUN = sum, na.rm = TRUE)
stepsPerDay <- aggregate.data.frame(x = activity$steps,  activity[,2], FUN = sum, na.rm = TRUE)
stepsPerDay <- aggregate.data.frame(x = activity$steps,  by = list(activity[,2]), FUN = sum, na.rm = TRUE)
View(stepsPerDay)
stepsPerDay <- aggregate.data.frame(x = activity$steps,  by = list(activity$date), FUN = sum, na.rm = TRUE)
View(stepsPerDay)
stepsPerInterval <- aggregate(x = activity$steps, by = list(activity$interval), FUN = mean, na.rm = TRUE)
View(stepsPerInterval)
stepsPerInterval <- aggregate.data.frame(x = activity$steps, by = list(activity$interval), FUN = mean, na.rm = TRUE)
View(stepsPerInterval)
stepsPerInterval <- aggregate.data.frame(x = activity$steps, by = activity$interval, FUN = mean, na.rm = TRUE)
stepsPerInterval <- aggregate.data.frame(x = activity$steps, by = list(activity$interval), FUN = mean, na.rm = TRUE, names = c("interval", "steps"))
View(stepsPerInterval)
